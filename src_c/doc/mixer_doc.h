/* Auto generated file: with make_docs.py .  Docs go in docs/reST/ref/ . */
#define DOC_MIXER "Pygame module for loading and playing sounds."
#define DOC_MIXER_INIT "init(frequency=44100, size=-16, channels=2, buffer=512, devicename=None, allowedchanges=5) -> None\nInitialize the mixer module."
#define DOC_MIXER_PREINIT "pre_init(frequency=44100, size=-16, channels=2, buffer=512, devicename=None, allowedchanges=5) -> None\nPreset the mixer init arguments."
#define DOC_MIXER_QUIT "quit() -> None\nUninitialize the mixer."
#define DOC_MIXER_GETINIT "get_init() -> tuple[int, int, int]\nTest if the mixer is initialized."
#define DOC_MIXER_GETDRIVER "get_driver() -> str\nGet the name of the current audio backend driver."
#define DOC_MIXER_STOP "stop() -> None\nStop playback of all sound channels."
#define DOC_MIXER_PAUSE "pause() -> None\nTemporarily stop playback of all sound channels."
#define DOC_MIXER_UNPAUSE "unpause() -> None\nResume paused playback of sound channels."
#define DOC_MIXER_FADEOUT "fadeout(time, /) -> None\nFade out the volume on all sounds before stopping."
#define DOC_MIXER_SETNUMCHANNELS "set_num_channels(count, /) -> None\nSet the total number of playback channels."
#define DOC_MIXER_GETNUMCHANNELS "get_num_channels() -> int\nGet the total number of playback channels."
#define DOC_MIXER_SETRESERVED "set_reserved(count, /) -> int\nReserve channels from being automatically used."
#define DOC_MIXER_FINDCHANNEL "find_channel(force=False) -> Channel\nFind an unused channel."
#define DOC_MIXER_SETSOUNDFONT "set_soundfont(paths=None, /) -> None\nSet the soundfont for playing midi music."
#define DOC_MIXER_GETSOUNDFONT "get_soundfont() -> Optional[str]\nGet the soundfont for playing midi music."
#define DOC_MIXER_GETBUSY "get_busy() -> bool\nTest if any sound is being mixed."
#define DOC_MIXER_GETSDLMIXERVERSION "get_sdl_mixer_version(linked=True) -> tuple[int, int, int]\nGet the mixer's SDL version."
#define DOC_MIXER_SOUND "Sound(file) -> Sound\nSound(buffer) -> Sound\nCreate a new Sound object from a file or buffer object."
#define DOC_MIXER_SOUND_PLAY "play(loops=0, maxtime=0, fade_ms=0) -> Channel\nBegin sound playback."
#define DOC_MIXER_SOUND_STOP "stop() -> None\nStop sound playback."
#define DOC_MIXER_SOUND_FADEOUT "fadeout(time, /) -> None\nStop sound playback after fading out."
#define DOC_MIXER_SOUND_SETVOLUME "set_volume(value, /) -> None\nSet the playback volume for this Sound."
#define DOC_MIXER_SOUND_GETVOLUME "get_volume() -> float\nGet the playback volume."
#define DOC_MIXER_SOUND_GETNUMCHANNELS "get_num_channels() -> int\nCount how many times this Sound is playing."
#define DOC_MIXER_SOUND_GETLENGTH "get_length() -> float\nGet the length of the Sound."
#define DOC_MIXER_SOUND_GETRAW "get_raw() -> bytes\nReturn a bytestring copy of the Sound samples."
#define DOC_MIXER_CHANNEL "Channel(id) -> Channel\nCreate a Channel object for controlling playback."
#define DOC_MIXER_CHANNEL_ID "id -> int\nGet the channel id for the Channel object."
#define DOC_MIXER_CHANNEL_PLAY "play(sound, loops=0, maxtime=0, fade_ms=0) -> None\nPlay a Sound on a specific Channel."
#define DOC_MIXER_CHANNEL_STOP "stop() -> None\nStop playback on a Channel."
#define DOC_MIXER_CHANNEL_PAUSE "pause() -> None\nTemporarily stop playback of a channel."
#define DOC_MIXER_CHANNEL_UNPAUSE "unpause() -> None\nResume pause playback of a channel."
#define DOC_MIXER_CHANNEL_FADEOUT "fadeout(time, /) -> None\nStop playback after fading channel out."
#define DOC_MIXER_CHANNEL_SETSOURCELOCATION "set_source_location(angle, distance, /) -> None\nSet the position of a playing channel."
#define DOC_MIXER_CHANNEL_SETVOLUME "set_volume(value, /) -> None\nset_volume(left, right, /) -> None\nSet the volume of a playing channel."
#define DOC_MIXER_CHANNEL_GETVOLUME "get_volume() -> float\nGet the volume of the playing channel."
#define DOC_MIXER_CHANNEL_GETBUSY "get_busy() -> bool\nCheck if the channel is active."
#define DOC_MIXER_CHANNEL_GETSOUND "get_sound() -> Sound\nGet the currently playing Sound."
#define DOC_MIXER_CHANNEL_QUEUE "queue(sound, /) -> None\nQueue a Sound object to follow the current."
#define DOC_MIXER_CHANNEL_GETQUEUE "get_queue() -> Sound\nReturn any Sound that is queued."
#define DOC_MIXER_CHANNEL_SETENDEVENT "set_endevent(type=0, /) -> None\nHave the channel send an event when playback stops."
#define DOC_MIXER_CHANNEL_GETENDEVENT "get_endevent() -> int\nGet the event a channel sends when playback stops."
