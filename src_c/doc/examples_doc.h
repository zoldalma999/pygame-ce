/* Auto generated file: with make_docs.py .  Docs go in docs/reST/ref/ . */
#define DOC_EXAMPLES "pygame.examples\n\n\n\nmodule of example programs\n\nThese examples should help get you started with pygame. Here is a brief rundown\nof what you get. The source code for these examples is in the public domain.\nFeel free to use for your own projects.\n\nThere are several ways to run the examples. First they can be run as\nstand-alone programs. Second they can be imported and their main() methods\ncalled (see below). Finally, the easiest way is to use the python -m option:\n\npython -m pygame.examples.<example name> <example arguments>\n\neg:\n\npython -m pygame.examples.scaletest someimage.png\n\nResources such as images and sounds for the examples are found in the\npygame/examples/data subdirectory.\n\nYou can find where the example files are installed by using the following\ncommands inside the python interpreter.\n\n>>> import pygame.examples.scaletest\n>>> pygame.examples.scaletest.__file__\n'/usr/lib/python2.6/site-packages/pygame/examples/scaletest.py'\n\nOn each OS and version of Python the location will be slightly different.\nFor example on Windows it might be in 'C:/Python26/Lib/site-packages/pygame/examples/'\nOn Mac OS X it might be in '/Library/Frameworks/Python.framework/Versions/2.6/lib/python2.6/site-packages/pygame/examples/'\n\nYou can also run the examples in the python interpreter by calling each modules main() function.\n\n>>> import pygame.examples.scaletest\n>>> pygame.examples.scaletest.main()\n\nWe're always on the lookout for more examples and/or example requests. Code\nlike this is probably the best way to start getting involved with python\ngaming.\n\nexamples as a package is new to pygame 1.9.0. But most of the examples came with\npygame much earlier."
#define DOC_EXAMPLES_ALIENS_MAIN "aliens.main()\n\nplay the full aliens example\n\naliens.main() -> None\n\nThis started off as a port of the SDL demonstration, Aliens. Now it has\nevolved into something sort of resembling fun. This demonstrates a lot of\ndifferent uses of sprites and optimized blitting. Also transparency,\ncolorkeys, fonts, sound, music, joystick, and more. (PS, my high score is\n117! goodluck)"
#define DOC_EXAMPLES_STARS_MAIN "stars.main()\n\nrun a simple starfield example\n\nstars.main() -> None\n\nA simple starfield example. You can change the center of perspective by\nleftclicking the mouse on the screen."
#define DOC_EXAMPLES_CHIMP_MAIN "chimp.main()\n\nhit the moving chimp\n\nchimp.main() -> None\n\nThis simple example is derived from the line-by-line tutorial that comes\nwith pygame. It is based on a 'popular' web banner. Note there are comments\nhere, but for the full explanation, follow along in the tutorial."
#define DOC_EXAMPLES_MOVEIT_MAIN "moveit.main()\n\ndisplay animated objects on the screen\n\nmoveit.main() -> None\n\nThis is the full and final example from the Pygame Tutorial, \"How Do I Make\nIt Move\". It creates 10 objects and animates them on the screen.\n\nNote it's a bit scant on error checking, but it's easy to read. :]\nFortunately, this is python, and we needn't wrestle with a pile of error\ncodes."
#define DOC_EXAMPLES_FONTY_MAIN "fonty.main()\n\nrun a font rendering example\n\nfonty.main() -> None\n\nSuper quick, super simple application demonstrating the different ways to\nrender fonts with the font module"
#define DOC_EXAMPLES_FREETYPEMISC_MAIN "freetype_misc.main()\n\nrun a FreeType rendering example\n\nfreetype_misc.main() -> None\n\nA showcase of rendering features the pygame.freetype.Font\nclass provides in addition to those available with pygame.font.Font.\nIt is a demonstration of direct to surface rendering, with vertical text\nand rotated text, opaque text and semi transparent text, horizontally\nstretched text and vertically stretched text."
#define DOC_EXAMPLES_VGRADE_MAIN "vgrade.main()\n\ndisplay a vertical gradient\n\nvgrade.main() -> None\n\nDemonstrates creating a vertical gradient with pixelcopy and NumPy python.\nThe app will create a new gradient every half second and report the time\nneeded to create and display the image. If you're not prepared to start\nworking with the NumPy arrays, don't worry about the source for this one :]"
#define DOC_EXAMPLES_EVENTLIST_MAIN "eventlist.main()\n\ndisplay pygame events\n\neventlist.main() -> None\n\nEventlist is a sloppy style of pygame, but is a handy tool for learning\nabout pygame events and input. At the top of the screen are the state of\nseveral device values, and a scrolling list of events are displayed on the\nbottom.\n\nThis is not quality 'ui' code at all, but you can see how to implement very\nnon-interactive status displays, or even a crude text output control."
#define DOC_EXAMPLES_ARRAYDEMO_MAIN "arraydemo.main()\n\nshow various surfarray effects\n\narraydemo.main(arraytype=None) -> None\n\nAnother example filled with various surfarray effects. It requires the\nsurfarray and image modules to be installed. This little demo can also make\na good starting point for any of your own tests with surfarray\n\nThe arraytype parameter is deprecated; passing any value besides 'numpy'\nwill raise ValueError."
#define DOC_EXAMPLES_SOUND_MAIN "sound.main()\n\nload and play a sound\n\nsound.main(file_path=None) -> None\n\nExtremely basic testing of the mixer module. Load a sound and play it. All\nfrom the command shell, no graphics.\n\nIf provided, use the audio file 'file_path', otherwise use a default file.\n\nsound.py optional command line argument: an audio file"
#define DOC_EXAMPLES_SOUNDARRAYDEMOS_MAIN "sound_array_demos.main()\n\nplay various sndarray effects\n\nsound_array_demos.main(arraytype=None) -> None\n\nUses sndarray and NumPy to create offset faded copies of the\noriginal sound. Currently it just uses hardcoded values for the number of\nechoes and the delay. Easy for you to recreate as needed.\n\nThe arraytype parameter is deprecated; passing any value besides 'numpy'\nwill raise ValueError."
#define DOC_EXAMPLES_LIQUID_MAIN "liquid.main()\n\ndisplay an animated liquid effect\n\nliquid.main() -> None\n\nThis example was created in a quick comparison with the BlitzBasic gaming\nlanguage. Nonetheless, it demonstrates a quick 8-bit setup (with colormap)."
#define DOC_EXAMPLES_GLCUBE_MAIN "glcube.main()\n\ndisplay an animated 3D cube using OpenGL\n\nglcube.main() -> None\n\nUsing PyOpenGL and pygame, this creates a spinning 3D multicolored cube."
#define DOC_EXAMPLES_SCRAPCLIPBOARD_MAIN "scrap_clipboard.main()\n\naccess the clipboard\n\nscrap_clipboard.main() -> None\n\nA simple demonstration example for the clipboard support."
#define DOC_EXAMPLES_MASK_MAIN "mask.main()\n\ndisplay multiple images bounce off each other using collision detection\n\nmask.main(*args) -> None\n\nPositional arguments:\n\none or more image file names.\n\nThis pygame.masks demo will display multiple moving sprites bouncing off\neach other. More than one sprite image can be provided.\n\nIf run as a program then mask.py takes one or more image files as\ncommand line arguments."
#define DOC_EXAMPLES_TESTSPRITE_MAIN "testsprite.main()\n\nshow lots of sprites moving around\n\ntestsprite.main(update_rects = True, use_static = False, use_FastRenderGroup = False, screen_dims = [640, 480], use_alpha = False, flags = 0) -> None\n\nOptional keyword arguments:\n\nupdate_rects - use the RenderUpdate sprite group class\nuse_static - include non-moving images\nuse_FastRenderGroup - Use the FastRenderGroup sprite group\nscreen_dims - pygame window dimensions\nuse_alpha - use alpha blending\nflags - additional display mode flags\n\nLike the testsprite.c that comes with SDL, this pygame version shows\nlots of sprites moving around.\n\nIf run as a stand-alone program then no command line arguments are taken."
#define DOC_EXAMPLES_HEADLESSNOWINDOWSNEEDED_MAIN "headless_no_windows_needed.main()\n\nwrite an image file that is smoothscaled copy of an input file\n\nheadless_no_windows_needed.main(fin, fout, w, h) -> None\n\narguments:\n\nfin - name of an input image file\nfout - name of the output file to create/overwrite\nw, h - size of the rescaled image, as integer width and height\n\nHow to use pygame with no windowing system, like on headless servers.\n\nThumbnail generation with scaling is an example of what you can do with\npygame.\n\nNOTE: the pygame scale function uses SIMD acceleration if available,\nand can be run in multiple threads.\n\nIf headless_no_windows_needed.py is run as a program it takes the\nfollowing command line arguments:\n\n-scale inputimage outputimage new_width new_height\neg. -scale in.png outpng 50 50"
#define DOC_EXAMPLES_JOYSTICK_MAIN "joystick.main()\n\ndemonstrate joystick functionality\n\njoystick.main() -> None\n\nA demo showing full joystick support.\n\nNew in pygame 2.0.2."
#define DOC_EXAMPLES_BLENDFILL_MAIN "blend_fill.main()\n\ndemonstrate the various surface.fill method blend options\n\nblend_fill.main() -> None\n\nA interactive demo that lets one choose which BLEND_xxx option to apply to a\nsurface."
#define DOC_EXAMPLES_BLITBLENDS_MAIN "blit_blends.main()\n\nuses alternative additive fill to that of surface.fill\n\nblit_blends.main() -> None\n\nFake additive blending. Using NumPy. it doesn't clamp. Press r,g,b Somewhat\nlike blend_fill."
#define DOC_EXAMPLES_CURSORS_MAIN "cursors.main()\n\ndisplay two different custom cursors\n\ncursors.main() -> None\n\nDisplay an arrow or circle with crossbar cursor."
#define DOC_EXAMPLES_PIXELARRAY_MAIN "pixelarray.main()\n\ndisplay various pixelarray generated effects\n\npixelarray.main() -> None\n\nDisplay various pixelarray generated effects."
#define DOC_EXAMPLES_SCALETEST_MAIN "scaletest.main()\n\ninteractively scale an image using smoothscale\n\nscaletest.main(imagefile, convert_alpha=False, run_speed_test=True) -> None\n\narguments:\n\nimagefile - file name of source image (required)\nconvert_alpha - use convert_alpha() on the surf (default False)\nrun_speed_test - (default False)\n\nA smoothscale example that resized an image on the screen. Vertical and\nhorizontal arrow keys are used to change the width and height of the\ndisplayed image. If the convert_alpha option is True then the source image\nis forced to have source alpha, whether or not the original images does. If\nrun_speed_test is True then a background timing test is performed instead of\nthe interactive scaler.\n\nIf scaletest.py is run as a program then the command line options are:\n\nImageFile [-t] [-convert_alpha]\n[-t] = Run Speed Test\n[-convert_alpha] = Use convert_alpha() on the surf."
#define DOC_EXAMPLES_MIDI_MAIN "midi.main()\n\nrun a midi example\n\nmidi.main(mode='output', device_id=None) -> None\n\nArguments:\n\nmode - if 'output' run a midi keyboard output example\n          'input' run a midi event logger input example\n          'list' list available midi devices\n       (default 'output')\ndevice_id - midi device number; if None then use the default midi input or\n            output device for the system\n\nThe output example shows how to translate mouse clicks or computer keyboard\nevents into midi notes. It implements a rudimentary button widget and state\nmachine.\n\nThe input example shows how to translate midi input to pygame events.\n\nWith the use of a virtual midi patch cord the output and input examples can\nbe run as separate processes and connected so the keyboard output is\ndisplayed on a console.\n\nnew to pygame 1.9.0"
#define DOC_EXAMPLES_SCROLL_MAIN "scroll.main()\n\nrun a Surface.scroll example that shows a magnified image\n\nscroll.main(image_file=None) -> None\n\nThis example shows a scrollable image that has a zoom factor of eight. It\nuses the Surface.scroll()\nfunction to shift the image on the display surface.\nA clip rectangle protects a margin area. If called as a function,\nthe example accepts an optional image file path. If run as a program it\ntakes an optional file path command line argument. If no file is provided a\ndefault image file is used.\n\nWhen running click on a black triangle to move one pixel in the direction\nthe triangle points. Or use the arrow keys. Close the window or press\nESC to quit."
#define DOC_EXAMPLES_CAMERA_MAIN "camera.main()\n\ndisplay video captured live from an attached camera\n\ncamera.main() -> None\n\nA simple live video player, it uses the first available camera it finds on\nthe system."
#define DOC_EXAMPLES_PLAYMUS_MAIN "playmus.main()\n\nplay an audio file\n\nplaymus.main(file_path) -> None\n\nA simple music player with window and keyboard playback control. Playback can\nbe paused and rewound to the beginning."
